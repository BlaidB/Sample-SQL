proc sql;
create table Pro_Customers as
select distinct parent_id
from HD.Contract_details_sites
where program_type like 'S%' and (end_date> today() or end_date is null)
;quit;

Proc SQL;
create table "Current" as 
select DISTINCT 
q.Supplier_id
,q.VENDOR_ID 
,c.year
,c.week
,q.CATEGORY_ID as Product_Category
,propcase(modality_code) as mod
,bs.BUDGET_SEGMENT as Budget_Segment
,bs.SUB_CATEGORY as Sub_Category
,cc.CONDITION_CODE as Condition_Code
,lie.DAYS_TO_SHIP as DAYS_TO_SHIP
,case when p.parent_id is not null then "Contract" else "Non-Contract" end as Cust
,sum(q.QUOETS) as QUOETS format=12.
,sum(q.orders) as Orders format=12. 
,sum(q.QUANTITY) as Quantity
,q.PRICE
,q.COST
,sum(revenue) as Revenue format=dollar15. 
,sum(Margin) as Margin format=dollar15. 

from HD.REVENUE Q
left join HD.LIMITED_INVINTORY_DETAILS lid on lid.Supplier_id = q.Supplier_id
Left join HD.VENDORS v on v.COMPANY_ID = q.Supplier_id
Left Join HD.CALENDAR c on datepart(c.date_key) = datepart(Q.Transaction_date)
left join HD.modalities m on m.modality_id = q.modality_id 
Left Join HD.BUDGET_SEGMENTS bs on bs.Supplier_id = q.Supplier_id
Left Join HD.CONDITION_CODES cc on cc.CONDITION_CODE = lid.CONDITION_CODE
left join HD.LIMITED_INVINTORY_DETAILS lid on lid.Supplier_id = q.Supplier_id
Left Join HD.CUSTOMERS cut on cut.COMPANY_ID = q.CUSTOMER_ID
left join work.pro_customers p on cut.lvl1_company_id = p.parent_id

WHERE year in (2023) and MONTH in (7) and ORDER_TYPE in ("Parts")

Group by 1,2,3,4,5,6,7,8,9,10,11,15,16;
;quit;

Proc SQL;
create table YOY as 
select DISTINCT 
q.Supplier_id 
,q.VENDOR_ID 
,c.year
,c.week
,q.CATEGORY_ID as Product_Category
,propcase(modality_code) as mod
,bs.BUDGET_SEGMENT as Budget_Segment
,bs.SUB_CATEGORY as Sub_Category
,cc.CONDITION_CODE as Condition_Code
,lie.DAYS_TO_SHIP as DAYS_TO_SHIP
,case when p.parent_id is not null then "Contract" else "Non-Contract" end as Cust
,sum(q.QUOETS) as QUOETS format=12.
,sum(q.orders) as Orders format=12. 
,sum(q.QUANTITY) as Quantity
,q.PRICE
,q.COST
,sum(revenue) as Revenue format=dollar15. 
,sum(Margin) as Margin format=dollar15. 

from HD.RORM_ALL q
left join HD.LINE_ITEM_DETAILS lid on lid.Supplier_id = q.Supplier_id
Left join HD.VENDORS v on v.COMPANY_ID = q.VENDOR_ID
Left Join HD.CALENDAR c on datepart(c.date_key) = datepart(Q.Transaction_date)
left join HD.modalities m on m.modality_id = q.modality_id 
Left Join HD.BUDGET_SEGMENTS bs on bs.Supplier_id = q.Supplier_id
Left Join HD.CONDITION_CODES cc on cc.CONDITION_CODE = lid.CONDITION_CODE
Left Join HD.LINE_ITEM_ENHANCEMENTS lie on lie.Supplier_id = q.Supplier_id
Left Join HD.CUSTOMERS cut on cut.COMPANY_ID = q.CUSTOMER_ID
left join work.pro_customers p on cut.lvl1_company_id = p.parent_id

WHERE year in (2022) and MONTH in (7) and ORDER_TYPE in ("Parts")

Group by 1,2,3,4,5,6,7,8,9,10,11,15,16;
;quit;

Proc SQL;
create table MOM as 
select DISTINCT 
q.Supplier_id 
,q.VENDOR_ID as Vendor_ID
,c.year
,c.week
,q.CATEGORY_ID as Product_Category
,propcase(modality_code) as mod
,bs.BUDGET_SEGMENT as Budget_Segment
,bs.SUB_CATEGORY as Sub_Category
,cc.CONDITION_CODE as Condition_Code
,lie.DAYS_TO_SHIP as DAYS_TO_SHIP
,case when p.parent_id is not null then "Contract" else "Non-Contract" end as Cust
,sum(q.QUOETS) as QUOETS format=12.
,sum(q.orders) as Orders format=12. 
,sum(q.QUANTITY) as Quantity
,q.PRICE
,q.COST
,sum(revenue) as Revenue format=dollar15. 
,sum(Margin) as Margin format=dollar15. 

from HD.RORM_ALL q
left join HD.LINE_ITEM_DETAILS lid on lid.Supplier_id = q.Supplier_id
Left join HD.VENDORS v on v.COMPANY_ID = q.VENDOR_ID
Left Join HD.CALENDAR c on datepart(c.date_key) = datepart(Q.Transaction_date)
left join HD.modalities m on m.modality_id = q.modality_id 
Left Join HD.BUDGET_SEGMENTS bs on bs.Supplier_id = q.Supplier_id
Left Join HD.CONDITION_CODES cc on cc.CONDITION_CODE = lid.CONDITION_CODE
Left Join HD.LINE_ITEM_ENHANCEMENTS lie on lie.Supplier_id = q.Supplier_id
Left Join HD.CUSTOMERS cut on cut.COMPANY_ID = q.CUSTOMER_ID
left join work.pro_customers p on cut.lvl1_company_id = p.parent_id

WHERE year in (2023) and MONTH in (6) and ORDER_TYPE in ("Parts")

Group by 1,2,3,4,5,6,7,8,9,10,11,15,16;
;quit;
